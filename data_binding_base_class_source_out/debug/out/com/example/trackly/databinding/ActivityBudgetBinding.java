// Generated by view binder compiler. Do not edit!
package com.example.trackly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.trackly.R;
import com.github.mikephil.charting.charts.BarChart;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBudgetBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final BarChart barChart;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final ImageButton btnNextMonth;

  @NonNull
  public final ImageButton btnPreviousMonth;

  @NonNull
  public final Button btnSetBudget;

  @NonNull
  public final CardView cardBudgetInfo;

  @NonNull
  public final CardView cardMonthSelector;

  @NonNull
  public final LinearLayout layoutMonthSelector;

  @NonNull
  public final ProgressBar progressBudget;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvBudgetAmount;

  @NonNull
  public final TextView tvBudgetPercentage;

  @NonNull
  public final TextView tvBudgetStatus;

  @NonNull
  public final TextView tvCategoryExpenses;

  @NonNull
  public final TextView tvCurrentMonth;

  @NonNull
  public final TextView tvExpensesAmount;

  @NonNull
  public final TextView tvNoBudget;

  @NonNull
  public final TextView tvRemainingAmount;

  private ActivityBudgetBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull BarChart barChart,
      @NonNull BottomNavigationView bottomNavigation, @NonNull ImageButton btnNextMonth,
      @NonNull ImageButton btnPreviousMonth, @NonNull Button btnSetBudget,
      @NonNull CardView cardBudgetInfo, @NonNull CardView cardMonthSelector,
      @NonNull LinearLayout layoutMonthSelector, @NonNull ProgressBar progressBudget,
      @NonNull TabLayout tabLayout, @NonNull Toolbar toolbar, @NonNull TextView tvBudgetAmount,
      @NonNull TextView tvBudgetPercentage, @NonNull TextView tvBudgetStatus,
      @NonNull TextView tvCategoryExpenses, @NonNull TextView tvCurrentMonth,
      @NonNull TextView tvExpensesAmount, @NonNull TextView tvNoBudget,
      @NonNull TextView tvRemainingAmount) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.barChart = barChart;
    this.bottomNavigation = bottomNavigation;
    this.btnNextMonth = btnNextMonth;
    this.btnPreviousMonth = btnPreviousMonth;
    this.btnSetBudget = btnSetBudget;
    this.cardBudgetInfo = cardBudgetInfo;
    this.cardMonthSelector = cardMonthSelector;
    this.layoutMonthSelector = layoutMonthSelector;
    this.progressBudget = progressBudget;
    this.tabLayout = tabLayout;
    this.toolbar = toolbar;
    this.tvBudgetAmount = tvBudgetAmount;
    this.tvBudgetPercentage = tvBudgetPercentage;
    this.tvBudgetStatus = tvBudgetStatus;
    this.tvCategoryExpenses = tvCategoryExpenses;
    this.tvCurrentMonth = tvCurrentMonth;
    this.tvExpensesAmount = tvExpensesAmount;
    this.tvNoBudget = tvNoBudget;
    this.tvRemainingAmount = tvRemainingAmount;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBudgetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBudgetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_budget, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBudgetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.bar_chart;
      BarChart barChart = ViewBindings.findChildViewById(rootView, id);
      if (barChart == null) {
        break missingId;
      }

      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.btn_next_month;
      ImageButton btnNextMonth = ViewBindings.findChildViewById(rootView, id);
      if (btnNextMonth == null) {
        break missingId;
      }

      id = R.id.btn_previous_month;
      ImageButton btnPreviousMonth = ViewBindings.findChildViewById(rootView, id);
      if (btnPreviousMonth == null) {
        break missingId;
      }

      id = R.id.btn_set_budget;
      Button btnSetBudget = ViewBindings.findChildViewById(rootView, id);
      if (btnSetBudget == null) {
        break missingId;
      }

      id = R.id.card_budget_info;
      CardView cardBudgetInfo = ViewBindings.findChildViewById(rootView, id);
      if (cardBudgetInfo == null) {
        break missingId;
      }

      id = R.id.card_month_selector;
      CardView cardMonthSelector = ViewBindings.findChildViewById(rootView, id);
      if (cardMonthSelector == null) {
        break missingId;
      }

      id = R.id.layout_month_selector;
      LinearLayout layoutMonthSelector = ViewBindings.findChildViewById(rootView, id);
      if (layoutMonthSelector == null) {
        break missingId;
      }

      id = R.id.progress_budget;
      ProgressBar progressBudget = ViewBindings.findChildViewById(rootView, id);
      if (progressBudget == null) {
        break missingId;
      }

      id = R.id.tab_layout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_budget_amount;
      TextView tvBudgetAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvBudgetAmount == null) {
        break missingId;
      }

      id = R.id.tv_budget_percentage;
      TextView tvBudgetPercentage = ViewBindings.findChildViewById(rootView, id);
      if (tvBudgetPercentage == null) {
        break missingId;
      }

      id = R.id.tv_budget_status;
      TextView tvBudgetStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvBudgetStatus == null) {
        break missingId;
      }

      id = R.id.tv_category_expenses;
      TextView tvCategoryExpenses = ViewBindings.findChildViewById(rootView, id);
      if (tvCategoryExpenses == null) {
        break missingId;
      }

      id = R.id.tv_current_month;
      TextView tvCurrentMonth = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentMonth == null) {
        break missingId;
      }

      id = R.id.tv_expenses_amount;
      TextView tvExpensesAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvExpensesAmount == null) {
        break missingId;
      }

      id = R.id.tv_no_budget;
      TextView tvNoBudget = ViewBindings.findChildViewById(rootView, id);
      if (tvNoBudget == null) {
        break missingId;
      }

      id = R.id.tv_remaining_amount;
      TextView tvRemainingAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvRemainingAmount == null) {
        break missingId;
      }

      return new ActivityBudgetBinding((CoordinatorLayout) rootView, appBarLayout, barChart,
          bottomNavigation, btnNextMonth, btnPreviousMonth, btnSetBudget, cardBudgetInfo,
          cardMonthSelector, layoutMonthSelector, progressBudget, tabLayout, toolbar,
          tvBudgetAmount, tvBudgetPercentage, tvBudgetStatus, tvCategoryExpenses, tvCurrentMonth,
          tvExpensesAmount, tvNoBudget, tvRemainingAmount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
